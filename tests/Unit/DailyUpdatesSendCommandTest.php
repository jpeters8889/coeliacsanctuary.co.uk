<?php

declare(strict_types=1);

namespace Tests\Unit;

use Tests\TestCase;
use Tests\Traits\CreatesWhereToEat;
use Coeliac\Modules\Blog\Models\Blog;
use Coeliac\Modules\Member\Models\User;
use Coeliac\Modules\Blog\Models\BlogTag;
use Illuminate\Support\Facades\Notification;
use Coeliac\Modules\Member\Models\DailyUpdateType;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Coeliac\Modules\Member\Models\DailyUpdatesQueue;
use Coeliac\Modules\Member\Notifications\DailyUpdate;

class DailyUpdatesSendCommandTest extends TestCase
{
    use CreatesWhereToEat;
    use RefreshDatabase;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        Notification::fake();
    }

    /** @test */
    public function itDoesntSendAnythingIfTheresNothingToSend()
    {
        $this->artisan('coeliac:send_daily_updates');

        Notification::assertNothingSent();
    }

    /** @test */
    public function itSendsANotificationWhenTheUserHasOneQueud()
    {
        $user = factory(User::class)->create();
        $tag = factory(BlogTag::class)->create();

        DailyUpdateType::query()->find(DailyUpdateType::BLOG_TAGS)->subscribe($user, $tag);

        $this->assertEmpty(DailyUpdatesQueue::all());

        $blog = factory(Blog::class)->create();
        $blog->tags()->attach($tag);

        $this->artisan('coeliac:send_daily_updates');

        Notification::assertSentTo($user, DailyUpdate::class);
    }

    /** @test */
    public function itOnlySendsTheBlogDetails()
    {
        //
    }

    /** @test */
    public function itSendsTheWhereToEatCountyDetails()
    {
        //
    }

    /** @test */
    public function itSendsTheWhereToEatTownDetails()
    {
        //
    }

    /** @test */
    public function itSendsTheBlogAndWhereToEatInOneNotification()
    {
        //
    }

    /** @test */
    public function itDoesntMentionBlogTagsIfNoneArePresent()
    {
        //
    }

    /** @test */
    public function itDoesntMentionWhereToEatIfNoneArePresent()
    {
        //
    }

    /** @test */
    public function itHasMultipleBlogsListedIfMultipleAreAdded()
    {
        //
    }

    /** @test */
    public function itHasMultipleEateriesListedIfMultipleArePresent()
    {
        //
    }

    /** @test */
    public function itListsTheTagsTheUserIsSubscribedTo()
    {
        //
    }

    /** @test */
    public function itListsTheLocationsTheUserIsSubscribedTo()
    {
        //
    }

    /** @test */
    public function itCanSendToMultipleUsers()
    {
        //
    }

    /** @test */
    public function itDeletesTheQueudNotificationsAfterTheyAreSent()
    {
        //
    }
}
